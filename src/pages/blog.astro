---
import BlogPost from '@components/BlogPost.astro'
import BaseLayout from '@layouts/BaseLayout.astro'
import BackButton from '@components/BackButton.astro'
import { relativeDate, splitPostsByDate, MonthNames } from '@utils/dateUtils'
const allPosts = await Astro.glob('../pages/posts/*.md')
const structuredPosts = splitPostsByDate(allPosts)
const collator = new Intl.Collator([], { numeric: true })
---

<BaseLayout>
  <BackButton to='/' />
  <h1 id='page-name'>Blog</h1>
  {
    Object.keys(structuredPosts)
      .sort((a, b) => collator.compare(a, b))
      .reverse()
      .map((year) => {
        const yearlyPosts = structuredPosts[Number(year)]
        return Object.keys(yearlyPosts)
          .sort((a, b) => collator.compare(a, b))
          .reverse()
          .map((month) => (
            <div class='monthly-posts'>
              <h2>{MonthNames[Number(month)] + ' ' + year}</h2>
              <ul>
                {yearlyPosts[Number(month)].map((post) => (
                  <li>
                    <BlogPost
                      url={post.url}
                      title={post.frontmatter.title}
                      description={post.frontmatter.description}
                      type={post.frontmatter.type}
                      pubDate={relativeDate(post.frontmatter.pubDate)}
                    />
                  </li>
                ))}
              </ul>
            </div>
          ))
      })
  }
</BaseLayout>

<style lang='scss'>
  #page-name {
    font-family: 'Overpass', sans-serif;
    font-weight: 700;
    font-size: 2.25rem;
    color: var(--accent-600);
    line-height: 1;
  }

  ul {
    padding: 0;
  }

  li {
    list-style: none;
    margin-bottom: 0.75rem;
  }

  li:last-child {
    margin-bottom: 0;
  }

  .monthly-posts {
    > h2 {
      font-family: 'Inter', sans-serif;
      font-weight: 700;
      font-size: 1.5rem;
      margin-bottom: 0.75rem;
    }
  }

  :global(.dark) .monthly-posts > h2 {
    color: var(--grey-100);
  }
</style>
