---
import { generateJsonLD } from '@utils/jsonLDgen'
import type { CollectionEntry } from 'astro:content'

interface Props {
  post: CollectionEntry<'blog'>
}
const { post } = Astro.props
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
---

<meta name='description' content={post.data.description} />
<!-- OpenGraph -->
<meta property='og:title' content={post.data.title} />
<meta property='og:type' content='article' />
<meta property='og:description' content={post.data.description} />

<!-- OpenGraph Article -->
<meta
  property='article:published_time'
  content={post.data.pubDate.toISOString()}
/>
<meta property='article:author' content={post.data.author} />
{post.data.tags.map((tag) => <meta property='article:tag' content={tag} />)}

<!-- Twitter -->
<meta name='twitter:description' content={post.data.description} />

<!-- JSON LD -->
<Fragment set:html={generateJsonLD(post, canonicalURL.toString())} />
